{"version":3,"file":"static/js/803.dc6a57c9.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/Profileinfo/Profile.module.css?7d25","components/Profile/Profileinfo/ProfileStatusWithHooks.jsx","components/Profile/Profileinfo/ProfileDataForum.jsx","components/Profile/Profileinfo/Profileinfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-app/./src/components/Profile/Profile.module.css?b512","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainImg\":\"Profile_mainImg__DCQUk\",\"descriptionBlock\":\"Profile_descriptionBlock__+hTJA\",\"mainPhoto\":\"Profile_mainPhoto__hdIAG\",\"contact\":\"Profile_contact__Kc894\"};","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false)\n    let [status, setStatus] = useState(props.status)\n\n    useEffect( () => {\n        setStatus(props.status)\n    }, [props.status])\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n        <div>\n            {!editMode &&\n                <div>\n                    <b>Status: </b><span onDoubleClick={activateEditMode}>{props.status || \"no status\"}</span>\n                </div>\n            }\n            {editMode &&\n                <div>\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\n                    value={status}/>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;","import { reduxForm } from \"redux-form\";\nimport { createField, Input, Textarea } from \"../../common/FormsControls/FormsControls\"\nimport s from './Profile.module.css';\nimport \"../../Login/Login.css\"\n\n\nconst ProfileDataForum = (props) => {\n    return <form onSubmit={props.handleSubmit}>\n        <div><button>save</button></div>\n        {props.error && <div className=\"formSummaryError\">\n            {props.error}\n        </div>\n        }\n        <div>\n            <b>Full name: </b> {createField(\"Full name\", \"fullName\", [], Input)}\n        </div>\n        <div>\n            <b>Looking for a job: </b>\n            {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\n        </div>\n\n        <div>\n            <b>My professional skills: </b> {props.profile.lookingForAJobDescription}\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\n        </div>\n\n        <div>\n            <b>About me: </b> {props.profile.aboutMe}\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\n        </div>\n        <div>\n            <b>Contacts: </b> {Object.keys(props.profile.contacts).map(key => {\n                return <div key={key} className={s.contact}>\n                    <b>{key}: {createField(key, \"contacts.\" + key, [], Input)} </b>\n                </div>\n            })}\n        </div>\n    </form>\n}\n\nconst ProfileDataForumReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForum)\n\nexport default ProfileDataForumReduxForm;","import React from 'react';\nimport s from './Profile.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport userimg from \"../../../assets/images/userimg.png\"\nimport { useState } from 'react';\nimport ProfileDataForum from './ProfileDataForum';\n\n\n\nconst ProfileInfo = (props) => {\n\n    let [editMode, setEditMode] = useState(false)\n\n    if (!props.profile) {\n        return <Preloader />\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            props.savePhoto(e.target.files[0])\n        }\n    }\n\n    const onSubmit = (formData) => {\n        props.saveProfile(formData).then(\n            () => {\n                setEditMode(false)\n            }\n        )\n    }\n\n    return (\n        <div className={s.profileDiv}>\n            <div>\n                <img alt=' ' className={s.mainImg}\n                    src='https://images.unsplash.com/photo-1546587348-d12660c30c50?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8NXx8bmF0dXJhbHxlbnwwfHwwfHw%3D&w=1000&q=80' />\n            </div>\n            <div className={s.descriptionBlock}>\n                <img alt=' ' src={props.profile.photos.large || userimg} className={s.mainPhoto} />\n                {props.isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\n\n                {editMode\n                    ? <ProfileDataForum initialValues={props.profile} profile={props.profile} onSubmit={onSubmit} />\n                    : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={props.profile} isOwner={props.isOwner} />}\n\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\n            </div>\n        </div>\n    )\n}\n\nconst ProfileData = (props) => {\n    return <div>\n        {props.isOwner && <div><button onClick={props.goToEditMode}>edit</button></div>}\n        <div>\n            <b>Full name: </b> {props.profile.fullName}\n        </div>\n        <div>\n            <b>Looking for a job: </b> {props.profile.lookingForAJob ? \"yes\" : \"no\"}\n        </div>\n        {props.profile.lookingForAJob &&\n            <div>\n                <b>My professional skills: </b> {props.profile.lookingForAJobDescription}\n            </div>\n        }\n\n        <div>\n            <b>About me: </b> {props.profile.aboutMe}\n        </div>\n        <div>\n            <b>Contacts: </b> {Object.keys(props.profile.contacts).map(key => {\n                return <Contact contactTitle={key} contactValue={props.profile.contacts[key]} />\n            })}\n        </div>\n    </div>\n}\n\nconst Contact = ({ contactTitle, contactValue }) => {\n    return <div className={s.contact}><b>{contactTitle}: </b>{contactValue}</div>\n}\n\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__lB-pf\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\"};","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n    <div className={s.item}>\n      <img alt=' ' src='https://image.shutterstock.com/image-vector/man-icon-vector-260nw-1040084344.jpg' />\n        { props.message }\n          <div>\n        <span>like</span> { props.likesCount }\n      </div>\n    </div>\n  )\n}\n\nexport default Post;","import React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\nconst MyPosts = (props) => {\n    let postsElements =\n        [...props.posts].reverse().map( p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\n\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostElement);\n    }\n\n    \n\n    return (\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n            <div>\n               <AddPostFormRedux onSubmit={onAddPost}/>\n            </div>\n            <div className={s.posts}>\n                { postsElements }\n            </div>\n        </div>\n    )\n}\n\nconst maxLength10 = maxLengthCreator(10);\n\nlet AddPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n             <div>\n                 <Field component={Textarea} name=\"newPostElement\" placeholder=\"New Post\"\n                 validate={[required, maxLength10]} />\n        \n                </div>\n                <div>\n                    <button >Add post</button>\n                </div>\n        </form>\n    )\n}\n\nconst AddPostFormRedux = reduxForm({form: \"addNewPostForm\"})(AddPostForm)\n\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostElement) => {\n            dispatch(addPostActionCreator(newPostElement));\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"Profile_postsBlock__oyOdF\",\"posts\":\"Profile_posts__ltpS8\",\"profilePage\":\"Profile_profilePage__VOKDQ\"};","import React from 'react';\nimport ProfileInfo from './Profileinfo/Profileinfo';\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport s from './Profile.module.css';\n\nconst Profile = (props) => {\n    return (\n        <div className={s.profilePage}>\n            <ProfileInfo\n                savePhoto={props.savePhoto}\n                isOwner={props.isOwner}\n                profile={props.profile}\n                status={props.status}\n                updateStatus={props.updateStatus}\n                saveProfile={props.saveProfile} />\n            <MyPostsContainer />\n        </div>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../../redux/profile-reducer\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.router.params.userId;\n        if (!userId) {\n            userId = this.props.loggedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\")\n            }\n        }\n        this.props.getUserProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.router.params.userId !== prevProps.router.params.userId) {\n            this.refreshProfile()\n        }\n    }\n\n\n    render() {\n        return (\n            <Profile {...this.props}\n                isOwner={!this.props.router.params.userId}\n                profile={this.props.profile}\n                status={this.props.status}\n                updateStatus={this.props.updateStatus}\n                savePhoto={this.props.savePhoto} />\n        )\n    }\n}\n\nfunction withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{ location, navigate, params }}\n            />\n        );\n    }\n\n    return ComponentWithRouterProp;\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    loggedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n});\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)\n\n\n","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n   \n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to = \"/login\" />\n\n            return <Component {...this.props}/>\n        }\n    }\n\n   \n    let ConnectAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent)\n\n    return ConnectAuthRedirectComponent;\n}"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","reduxForm","form","onSubmit","handleSubmit","error","className","createField","Input","type","profile","lookingForAJobDescription","Textarea","aboutMe","Object","keys","contacts","map","key","s","ProfileData","isOwner","onClick","goToEditMode","fullName","lookingForAJob","Contact","contactTitle","contactValue","Preloader","alt","src","photos","large","userimg","target","files","length","savePhoto","initialValues","formData","saveProfile","then","message","likesCount","maxLength10","maxLengthCreator","AddPostFormRedux","Field","component","name","placeholder","validate","required","postsElements","posts","reverse","p","id","values","addPost","newPostElement","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userId","this","router","params","loggedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","React","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","mapStateToPropsForRedirect","RedirectComponent","to"],"sourceRoot":""}