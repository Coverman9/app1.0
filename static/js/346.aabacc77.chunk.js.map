{"version":3,"file":"static/js/346.aabacc77.chunk.js","mappings":"uMAWA,EAPmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAO,gBAAKC,UAAU,SAAf,UACH,SAAC,KAAD,CAASC,GAAIH,EAAb,UAAmB,iBAAKE,UAAU,eAAf,WAA8B,gBAAKE,IAAI,IAAIC,IAAON,EAAMO,OAAM,iBAAMJ,UAAU,OAAhB,SAAwBH,EAAMQ,eCAvH,EAJgB,SAACR,GACb,OAAO,gBAAKG,UAAU,SAAf,SAAyBH,EAAMS,W,iDCqCpCC,GAAcC,EAAAA,EAAAA,GAAiB,IAiB/BC,GAAsBC,EAAAA,EAAAA,GAAW,CAACC,KAAM,wBAAlBD,EAfL,SAACb,GACpB,OACI,kBAAMe,SAAUf,EAAMgB,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,EAAUX,GAChDF,KAAK,iBAAiBc,YAAY,0BAGvC,0BACI,mBAAQnB,UAAU,mBAAlB,iCAQhB,EA/CgB,SAACH,GAEb,IAAIuB,EAAQvB,EAAMwB,SAClBC,QAAQC,IAAIH,GACZ,IAAII,EAAkBJ,EAAMK,YAAYC,KACnC,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAiBN,GAAI4B,EAAE5B,GAAIK,IAAKuB,EAAEvB,KAAvBuB,EAAE5B,OAEvC6B,EAAmBR,EAAMS,aAAaH,KACrC,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASxB,QAASwB,EAAExB,SAAcwB,EAAE/B,OAK9C,OAAKF,EAAMkC,QAGP,iBAAK/B,UAAU,UAAf,WACI,gBAAKA,UAAU,cAAf,SACKwB,KAEL,gBAAKxB,UAAU,WAAf,SACK4B,KAEL,SAACnB,EAAD,CAAqBG,SAbZ,SAACoB,GACdnC,EAAMoC,WAAWD,EAAOE,uBAEF,SAAC,KAAD,CAAUjC,GAAI,Y,UCD5C,GAAekC,E,QAAAA,KACXC,EAAAA,EAAAA,KAjBkB,SAAChB,GAEnB,MAAO,CACHC,SAAUD,EAAMC,SAChBgB,eAAgBjB,EAAMC,SAASgB,mBAGd,SAACC,GACtB,MAAO,CACHL,WAAY,SAACC,GACTI,GAASC,EAAAA,EAAAA,GAAwBL,SAQzCM,EAAAA,EAFJ,CAGGC,I,iJCvBCC,EAA6B,SAACtB,GAAD,MAAY,CACzCW,OAAQX,EAAMuB,KAAKZ,SAGVS,EAAmB,SAACI,GAAe,IAEtCC,EAFqC,0IAGvC,WACI,OAAKC,KAAKjD,MAAMkC,QAET,SAACa,GAAD,UAAeE,KAAKjD,SAFI,SAAC,KAAD,CAAUI,GAAK,eAJX,GAEX8C,EAAAA,WAWhC,OAFmCX,EAAAA,EAAAA,IAASM,EAATN,CAAsCS","sources":["components/Dialogs/DialogItem/Dialogitem.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["import React from \"react\";\nimport './DialogItem.css';\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path = \"/dialogs/\" + props.id;\n    return <div className=\"dialog\">\n        <NavLink to={path}><div className=\"imgContainer\"><img alt=\" \" src = {props.img}/><span className=\"span\">{props.name}</span></div></NavLink>\n    </div>\n}\n\nexport default DialogItem;","import React from \"react\"\nimport '../Dialogs.css'\n\nconst Message = (props) => {\n    return <div className=\"dialog\">{props.message}</div>\n}\n\nexport default Message;","import React from \"react\";\nimport './Dialogs.css';\nimport DialogItem from \"./DialogItem/Dialogitem\";\nimport Message from \"./Messages/Messages\";\nimport { Field } from \"redux-form\";\nimport { reduxForm } from \"redux-form\";\nimport { Navigate } from \"react-router-dom\";\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\nimport { required, maxLengthCreator } from \"../../utils/validators/validators\";\n\n\n\n\nconst Dialogs = (props) => {\n\n    let state = props.chatHere;\n    console.log(state)\n    let dialogsElements = state.dialogsData.map\n        (d => <DialogItem name={d.name} key={d.id} id={d.id} img={d.img} />)\n\n    let messagesElements = state.messagesData.map\n        (m => <Message message={m.message} key={m.id} />)\n\n    let addMessage = (values) => {\n        props.addMessage(values.newMessageBody)\n    }\n    if (!props.isAuth) return <Navigate to={\"/login\"} />\n\n    return (\n        <div className=\"dialogs\">\n            <div className=\"dialogItems\">\n                {dialogsElements}\n            </div>\n            <div className=\"messages\">\n                {messagesElements}\n            </div>\n            <AddMessageFormRedux onSubmit={addMessage}/>\n        </div>\n    )\n}\n\nconst maxLength50 = maxLengthCreator(50)\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} validate={[required, maxLength50]}\n                 name=\"newMessageBody\" placeholder=\"Enter your message\" />\n               \n            </div>\n            <div>\n                <button className=\"addMessageButton\">Add message</button>\n            </div>\n        </form>\n    )\n}\n\nconst AddMessageFormRedux = reduxForm ({form: \"dialogAddMessageForm\"})(AddMessageForm)\n\nexport default Dialogs;","import { connect } from \"react-redux\";\nimport { addMessageActionCreator } from \"../../redux/chat-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from \"redux\";\n\n\n\n\nlet mapStateToProps = (state) => {\n\n    return {\n        chatHere: state.chatHere,\n        newMessageText: state.chatHere.newMessageText,\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (newMessageBody) =>{\n            dispatch(addMessageActionCreator(newMessageBody));\n        }\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n) (Dialogs);","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n   \n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to = \"/login\" />\n\n            return <Component {...this.props}/>\n        }\n    }\n\n   \n    let ConnectAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent)\n\n    return ConnectAuthRedirectComponent;\n}"],"names":["props","path","id","className","to","alt","src","img","name","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","chatHere","console","log","dialogsElements","dialogsData","map","d","messagesElements","messagesData","m","isAuth","values","addMessage","newMessageBody","compose","connect","newMessageText","dispatch","addMessageActionCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}